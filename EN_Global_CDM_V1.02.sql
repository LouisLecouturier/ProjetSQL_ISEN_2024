CREATE TABLE KoCREW(
   KoCREW_CODE INTEGER,
   KoCREW_NAME VARCHAR(50)  NOT NULL,
   CONSTRAINT PK_KoCREW PRIMARY KEY(KoCREW_CODE)
);
COMMENT ON TABLE KoCREW IS 'Kinds of Crew';
COMMENT ON COLUMN KoCREW.KoCREW_CODE IS 'Crew Type Identifier';

CREATE TABLE ROLES(
   ROLE_CODE INTEGER,
   CONSTRAINT PK_ROLES PRIMARY KEY(ROLE_CODE)
);
COMMENT ON TABLE ROLES IS 'Roles';
COMMENT ON COLUMN ROLES.ROLE_CODE IS 'Role Identifier';

CREATE TABLE CREWS(
   CREW_CODE INTEGER,
   CREW_NAME VARCHAR(50)  NOT NULL,
   CONSTRAINT PK_CREWS PRIMARY KEY(CREW_CODE)
);
COMMENT ON TABLE CREWS IS 'Crews';
COMMENT ON COLUMN CREWS.CREW_CODE IS 'Crew Identifier';

CREATE TABLE KoLICENSE(
   KoLIC_CODE INTEGER,
   KoLIC_NAME VARCHAR(50)  NOT NULL,
   CONSTRAINT PK_KoLICENSE PRIMARY KEY(KoLIC_CODE)
);
COMMENT ON TABLE KoLICENSE IS 'Kinds of License';
COMMENT ON COLUMN KoLICENSE.KoLIC_CODE IS 'License Type Identifier';

CREATE TABLE QUALIFICATIONS(
   QUALIF_CODE INTEGER,
   QUALIF_NAME VARCHAR(50)  NOT NULL,
   QUALIF_DSCR TEXT NOT NULL,
   CONSTRAINT PK_QUALIFICATIONS PRIMARY KEY(QUALIF_CODE)
);
COMMENT ON TABLE QUALIFICATIONS IS 'Qualifications';
COMMENT ON COLUMN QUALIFICATIONS.QUALIF_CODE IS 'Qualification Identifier';
COMMENT ON COLUMN QUALIFICATIONS.QUALIF_NAME IS 'Qualification Name';
COMMENT ON COLUMN QUALIFICATIONS.QUALIF_DSCR IS 'Qualification Description';

CREATE TABLE STATUS(
   STATUS_CODE SMALLINT,
   STATUS_NAME VARCHAR(50)  NOT NULL,
   STATUS_DSCR TEXT NOT NULL,
   CONSTRAINT PK_STATUS PRIMARY KEY(STATUS_CODE)
);
COMMENT ON TABLE STATUS IS 'Status';
COMMENT ON COLUMN STATUS.STATUS_CODE IS 'Status Identifier';
COMMENT ON COLUMN STATUS.STATUS_NAME IS 'Ex : Embauche en cours, entrée compagnie, sortie compagnie, disponible, indisponible';
COMMENT ON COLUMN STATUS.STATUS_DSCR IS 'Status description';

CREATE TABLE KoEVENT(
   KoEVT_CODE INTEGER,
   KoEVT_NAME VARCHAR(50)  NOT NULL,
   CONSTRAINT PK_KoEVENT PRIMARY KEY(KoEVT_CODE)
);
COMMENT ON TABLE KoEVENT IS 'Types of events';
COMMENT ON COLUMN KoEVENT.KoEVT_NAME IS 'entrée compagnie, sortie compagnie, arrêt maladie, reprise maladie, ...';

CREATE TABLE DOC(
   DOC_CODE INTEGER,
   DOC_NAME VARCHAR(50)  NOT NULL,
   DOC_DATE DATE,
   DOC_LINK VARCHAR(50)  NOT NULL,
   CONSTRAINT PK_DOC PRIMARY KEY(DOC_CODE)
);
COMMENT ON TABLE DOC IS 'Documents';

CREATE TABLE CITIES(
   CITY_CODE CHAR(25) ,
   CITY_GPS VARCHAR(50) ,
   CONSTRAINT PK_CITIES PRIMARY KEY(CITY_CODE)
);
COMMENT ON TABLE CITIES IS 'Cities';

CREATE TABLE LANGUAGES(
   LNG_CODE CHAR(2) ,
   CONSTRAINT PK_LANGUAGES PRIMARY KEY(LNG_CODE)
);
COMMENT ON TABLE LANGUAGES IS 'Languages';

CREATE TABLE KoAIRCRAFT(
   IATA CHAR(4) ,
   AUTONOMY INTEGER,
   SPEED INTEGER,
   SEATS INTEGER NOT NULL,
   MAX_LOAD INTEGER,
   MAX_FUEL INTEGER,
   CONSTRAINT PK_KoAIRCRAFT PRIMARY KEY(IATA)
);
COMMENT ON TABLE KoAIRCRAFT IS 'Types of aircraft';
COMMENT ON COLUMN KoAIRCRAFT.AUTONOMY IS 'Autonomy in kilometers';
COMMENT ON COLUMN KoAIRCRAFT.SPEED IS 'Speed in kilometers per hour';
COMMENT ON COLUMN KoAIRCRAFT.SEATS IS 'Number of seats';
COMMENT ON COLUMN KoAIRCRAFT.MAX_FUEL IS 'Max fuel in liters';

CREATE TABLE WEEKDAYS(
   DAY_NBR SMALLINT,
   CONSTRAINT PK_WEEKDAYS PRIMARY KEY(DAY_NBR)
);
COMMENT ON TABLE WEEKDAYS IS 'Days in Week';
COMMENT ON COLUMN WEEKDAYS.DAY_NBR IS 'From 1:Monday to 7:Sunday';

CREATE TABLE CLASSES(
   CLASS_CODE INTEGER,
   CLASS_NAME VARCHAR(50)  NOT NULL,
   CONSTRAINT PK_CLASSES PRIMARY KEY(CLASS_CODE)
);
COMMENT ON TABLE CLASSES IS 'Classes';

CREATE TABLE TIMESLOTS(
   TIMESLOT_CODE INTEGER,
   BEGINNING TIME,
   ENDING TIME,
   CONSTRAINT PK_TIMESLOTS PRIMARY KEY(TIMESLOT_CODE)
);
COMMENT ON TABLE TIMESLOTS IS 'Time Slot';
COMMENT ON COLUMN TIMESLOTS.TIMESLOT_CODE IS 'exemple : début de journée, milieu de journée, fin de journée, indifférent';

CREATE TABLE CURRENCIES(
   CURR_CODE CHAR(4) ,
   CURR_NAME VARCHAR(50) ,
   CONSTRAINT PK_CURRENCIES PRIMARY KEY(CURR_CODE)
);
COMMENT ON TABLE CURRENCIES IS 'Currencies';
COMMENT ON COLUMN CURRENCIES.CURR_CODE IS 'EUR, USD, YEN, ...';

CREATE TABLE AIRCRAFTS(
   AIRCRAFT_NBR SMALLINT,
   LAST_SERVICING DATE,
   TOTALFLIGHTHOURS INTEGER,
   KoAIRCRAFT_IATA CHAR(4)  NOT NULL,
   CONSTRAINT PK_AIRCRAFTS PRIMARY KEY(AIRCRAFT_NBR),
   CONSTRAINT FK_AIRCRAFTS_KoAIRCRAFT FOREIGN KEY(KoAIRCRAFT_IATA) REFERENCES KoAIRCRAFT(IATA)
);
COMMENT ON TABLE AIRCRAFTS IS 'Aircrafts';
COMMENT ON COLUMN AIRCRAFTS.TOTALFLIGHTHOURS IS 'Total des heures de vol effectué avec appareil';

CREATE TABLE PASSENGERS(
   PSGR_CODE INTEGER,
   LNAME TIME,
   FNAME VARCHAR(50) ,
   CONSTRAINT PK_PASSENGERS PRIMARY KEY(PSGR_CODE)
);
COMMENT ON TABLE PASSENGERS IS 'Passengers';

CREATE TABLE STAFF(
   STAFF_CODE INTEGER,
   LNAME VARCHAR(50)  NOT NULL,
   FNAME VARCHAR(50)  NOT NULL,
   BIRTH DATE NOT NULL,
   MEMBER_POSITION VARCHAR(50)  NOT NULL,
   FLYING BOOLEAN,
   TFH SMALLINT,
   STAFF_STAFF_CODE_manager INTEGER,
   STATUS_STATUS_CODE SMALLINT NOT NULL,
   CONSTRAINT PK_STAFF PRIMARY KEY(STAFF_CODE),
   CONSTRAINT FK_STAFF_STAFF_manager FOREIGN KEY(STAFF_STAFF_CODE_manager) REFERENCES STAFF(STAFF_CODE),
   CONSTRAINT FK_STAFF_STATUS FOREIGN KEY(STATUS_STATUS_CODE) REFERENCES STATUS(STATUS_CODE)
);
COMMENT ON TABLE STAFF IS 'Staff members';
COMMENT ON COLUMN STAFF.MEMBER_POSITION IS '(Hierarchical) position in the entertrise (CEO, COO, CFO, CIO, CMO, ...)';
COMMENT ON COLUMN STAFF.TFH IS 'Virtual column - Calculated data : SELECT SUM(Hours_Numbers) FROM In_Flight WHERE FK = Staff.Code';

CREATE TABLE MONTH_PERIODS(
   YEAR_PERIOD CHAR(4) ,
   MONTH_PERIOD CHAR(2) ,
   CONSTRAINT PK_MONTH_PERIODS PRIMARY KEY(YEAR_PERIOD, MONTH_PERIOD)
);
COMMENT ON TABLE MONTH_PERIODS IS 'Month within Year';
COMMENT ON COLUMN MONTH_PERIODS.MONTH_PERIOD IS 'Between 1 and 12';

CREATE TABLE DAY_PERIODS(
   YEAR_PERIODS_YEAR_PERIOD CHAR(4) ,
   MONTH_PERIODS_MONTH_PERIOD CHAR(2) ,
   DAY_PERIOD CHAR(2) ,
   WEEKDAYS_DAY_NBR SMALLINT NOT NULL,
   CONSTRAINT PK_DAY_PERIODS PRIMARY KEY(YEAR_PERIODS_YEAR_PERIOD, MONTH_PERIODS_MONTH_PERIOD, DAY_PERIOD),
   CONSTRAINT FK_DAY_PERIODS_MONTH_PERIODS FOREIGN KEY(YEAR_PERIODS_YEAR_PERIOD, MONTH_PERIODS_MONTH_PERIOD) REFERENCES MONTH_PERIODS(YEAR_PERIOD, MONTH_PERIOD),
   CONSTRAINT FK_DAY_PERIODS_WEEKDAYS FOREIGN KEY(WEEKDAYS_DAY_NBR) REFERENCES WEEKDAYS(DAY_NBR)
);
COMMENT ON TABLE DAY_PERIODS IS 'Day within Month';
COMMENT ON COLUMN DAY_PERIODS.DAY_PERIOD IS 'Between 1 and 31';

CREATE TABLE ASSIGNMENTS(
   STAFF_STAFF_CODE INTEGER,
   ASSIGNT_NBR INTEGER,
   STARTING DATE NOT NULL,
   ENDING DATE,
   ROLES_ROLE_CODE INTEGER NOT NULL,
   CREWS_CREW_CODE INTEGER NOT NULL,
   CONSTRAINT PK_ASSIGNMENTS PRIMARY KEY(STAFF_STAFF_CODE, ASSIGNT_NBR),
   CONSTRAINT FK_ASSIGNMENTS_STAFF FOREIGN KEY(STAFF_STAFF_CODE) REFERENCES STAFF(STAFF_CODE),
   CONSTRAINT FK_ASSIGNMENTS_ROLES FOREIGN KEY(ROLES_ROLE_CODE) REFERENCES ROLES(ROLE_CODE),
   CONSTRAINT FK_ASSIGNMENTS_CREWS FOREIGN KEY(CREWS_CREW_CODE) REFERENCES CREWS(CREW_CODE)
);
COMMENT ON TABLE ASSIGNMENTS IS 'Assignment';

CREATE TABLE EVENTS(
   STAFF_STAFF_CODE INTEGER,
   EVENT_NBR INTEGER,
   EVENT_LABEL VARCHAR(50)  NOT NULL,
   EVENT_DSCR TEXT,
   EVENT_DATE DATE NOT NULL,
   EVENT_TIME TIME NOT NULL,
   STATUS_STATUS_CODE SMALLINT,
   KoEVENT_KoEVT_CODE INTEGER NOT NULL,
   CONSTRAINT PK_EVENTS PRIMARY KEY(STAFF_STAFF_CODE, EVENT_NBR),
   CONSTRAINT AK_EVENTS UNIQUE(STAFF_STAFF_CODE),
   CONSTRAINT FK_EVENTS_STAFF FOREIGN KEY(STAFF_STAFF_CODE) REFERENCES STAFF(STAFF_CODE),
   CONSTRAINT FK_EVENTS_STATUS FOREIGN KEY(STATUS_STATUS_CODE) REFERENCES STATUS(STATUS_CODE),
   CONSTRAINT FK_EVENTS_KoEVENT FOREIGN KEY(KoEVENT_KoEVT_CODE) REFERENCES KoEVENT(KoEVT_CODE)
);
COMMENT ON TABLE EVENTS IS 'Events';

CREATE TABLE AIRPORTS(
   AIRPORT_CODE CHAR(4) ,
   CURRENCIES_CURR_CODE CHAR(4)  NOT NULL,
   CONSTRAINT PK_AIRPORTS PRIMARY KEY(AIRPORT_CODE),
   CONSTRAINT FK_AIRPORTS_CURRENCIES FOREIGN KEY(CURRENCIES_CURR_CODE) REFERENCES CURRENCIES(CURR_CODE)
);
COMMENT ON TABLE AIRPORTS IS 'Airports';

CREATE TABLE AIRLINKS(
   AIRLINK_CODE INTEGER,
   AIRLINK_DISTANCE VARCHAR(50) ,
   AIRPORTS_AIRPORT_CODE_from CHAR(4)  NOT NULL,
   AIRPORTS_AIRPORT_CODE_to CHAR(4)  NOT NULL,
   CONSTRAINT PK_AIRLINKS PRIMARY KEY(AIRLINK_CODE),
   CONSTRAINT FK_AIRLINKS_AIRPORTS__from FOREIGN KEY(AIRPORTS_AIRPORT_CODE_from) REFERENCES AIRPORTS(AIRPORT_CODE),
   CONSTRAINT FK_AIRLINKS_AIRPORTS__to FOREIGN KEY(AIRPORTS_AIRPORT_CODE_to) REFERENCES AIRPORTS(AIRPORT_CODE)
);
COMMENT ON TABLE AIRLINKS IS 'Airlinks (Airline connections)';
COMMENT ON COLUMN AIRLINKS.AIRLINK_DISTANCE IS 'Flight Distance between Airports in kilometers';

CREATE TABLE ROUTES(
   ROUTE_CODE INTEGER,
   ROUTE_DURATION TIME NOT NULL,
   KoAIRCRAFT_IATA CHAR(4)  NOT NULL,
   AIRLINKS_AIRLINK_CODE INTEGER NOT NULL,
   CONSTRAINT PK_ROUTES PRIMARY KEY(ROUTE_CODE),
   CONSTRAINT FK_ROUTES_KoAIRCRAFT FOREIGN KEY(KoAIRCRAFT_IATA) REFERENCES KoAIRCRAFT(IATA),
   CONSTRAINT FK_ROUTES_AIRLINKS FOREIGN KEY(AIRLINKS_AIRLINK_CODE) REFERENCES AIRLINKS(AIRLINK_CODE)
);
COMMENT ON TABLE ROUTES IS 'Routes (Airlinks performed with a type of aircraft)';
COMMENT ON COLUMN ROUTES.ROUTE_DURATION IS 'Duration in hours-minutes-seconds';

CREATE TABLE CHECKUPS(
   CHECKUP_NBR INTEGER,
   CHECKUP_DATE DATE NOT NULL,
   STAFF_STAFF_CODE_Last_Only INTEGER NOT NULL,
   CONSTRAINT PK_CHECKUPS PRIMARY KEY(CHECKUP_NBR),
   CONSTRAINT AK_CHECKUPS UNIQUE(STAFF_STAFF_CODE_Last_Only),
   CONSTRAINT FK_CHECKUPS_STAFF_Last_Only FOREIGN KEY(STAFF_STAFF_CODE_Last_Only) REFERENCES STAFF(STAFF_CODE)
);
COMMENT ON TABLE CHECKUPS IS 'Medical Check-up';

CREATE TABLE PLAN_FLIGHTS(
   FLIGHT_NBR SMALLINT,
   DEPARTURE TIME,
   FREQUENCY SMALLINT,
   AIRLINKS_AIRLINK_CODE INTEGER NOT NULL,
   CONSTRAINT PK_PLAN_FLIGHTS PRIMARY KEY(FLIGHT_NBR),
   CONSTRAINT FK_PLAN_FLIGHTS_AIRLINKS FOREIGN KEY(AIRLINKS_AIRLINK_CODE) REFERENCES AIRLINKS(AIRLINK_CODE)
);
COMMENT ON TABLE PLAN_FLIGHTS IS 'Planned flights';
COMMENT ON COLUMN PLAN_FLIGHTS.FLIGHT_NBR IS 'Flight Number unique in a day';
COMMENT ON COLUMN PLAN_FLIGHTS.DEPARTURE IS 'Local time of flight departure (UTC)';
COMMENT ON COLUMN PLAN_FLIGHTS.FREQUENCY IS 'Number of flights per week';

CREATE TABLE PLAN_DAYFLIGHTS(
   WEEKDAYS_DAY_NBR SMALLINT,
   PLAN_FLIGHTS_FLIGHT_NBR SMALLINT,
   PLAN_SEATS SMALLINT,
   PLAN_DURATION TIME NOT NULL,
   PLAN_ARR_TIME TIME,
   KoAIRCRAFT_IATA CHAR(4) ,
   CONSTRAINT PK_PLAN_DAYFLIGHTS PRIMARY KEY(WEEKDAYS_DAY_NBR, PLAN_FLIGHTS_FLIGHT_NBR),
   CONSTRAINT FK_PLAN_DAYFLIGHTS_WEEKDAYS FOREIGN KEY(WEEKDAYS_DAY_NBR) REFERENCES WEEKDAYS(DAY_NBR),
   CONSTRAINT FK_PLAN_DAYFLIGHTS_PLAN_FLIGHTS FOREIGN KEY(PLAN_FLIGHTS_FLIGHT_NBR) REFERENCES PLAN_FLIGHTS(FLIGHT_NBR),
   CONSTRAINT FK_PLAN_DAYFLIGHTS_KoAIRCRAFT FOREIGN KEY(KoAIRCRAFT_IATA) REFERENCES KoAIRCRAFT(IATA)
);
COMMENT ON TABLE PLAN_DAYFLIGHTS IS 'Planned day flights';
COMMENT ON COLUMN PLAN_DAYFLIGHTS.PLAN_SEATS IS 'Estimated quantity (number) of passengers for this day in week';
COMMENT ON COLUMN PLAN_DAYFLIGHTS.PLAN_ARR_TIME IS 'Estimated local arrival time';

CREATE TABLE PLAN_STOPOVERS(
   WEEKDAYS_DAY_NBR SMALLINT,
   PLAN_FLIGHTS_FLIGHT_NBR SMALLINT,
   STOPOVER_NBR SMALLINT,
   STOPOVER_DURATION TIME NOT NULL,
   ROUTES_ROUTE_CODE INTEGER,
   CONSTRAINT PK_PLAN_STOPOVERS PRIMARY KEY(WEEKDAYS_DAY_NBR, PLAN_FLIGHTS_FLIGHT_NBR, STOPOVER_NBR),
   CONSTRAINT FK_PLAN_STOPOVERS_PLAN_DAYFLIGHTS FOREIGN KEY(WEEKDAYS_DAY_NBR, PLAN_FLIGHTS_FLIGHT_NBR) REFERENCES PLAN_DAYFLIGHTS(WEEKDAYS_DAY_NBR, PLAN_FLIGHTS_FLIGHT_NBR),
   CONSTRAINT FK_PLAN_STOPOVERS_ROUTES FOREIGN KEY(ROUTES_ROUTE_CODE) REFERENCES ROUTES(ROUTE_CODE)
);
COMMENT ON TABLE PLAN_STOPOVERS IS 'Planned Stopovers - Arrival airport known thru Route then Airlink';
COMMENT ON COLUMN PLAN_STOPOVERS.STOPOVER_DURATION IS 'Duration of Stopover on the airport';

CREATE TABLE EFF_FLIGHTS(
   WEEKDAYS_DAY_NBR SMALLINT,
   PLAN_FLIGHTS_FLIGHT_NBR SMALLINT,
   PLAN_DEP_DATE TIME,
   RES_SEATS_QTY SMALLINT,
   OCC_SEATS_QTY SMALLINT,
   REAL_DEP_TIME TIMESTAMP,
   REAL_ARR_TIME TIMESTAMP,
   LOADED_FUEL INTEGER,
   CREWS_CREW_CODE INTEGER,
   AIRCRAFTS_AIRCRAFT_NBR SMALLINT,
   CONSTRAINT PK_EFF_FLIGHTS PRIMARY KEY(WEEKDAYS_DAY_NBR, PLAN_FLIGHTS_FLIGHT_NBR, PLAN_DEP_DATE),
   CONSTRAINT FK_EFF_FLIGHTS_PLAN_DAYFLIGHTS FOREIGN KEY(WEEKDAYS_DAY_NBR, PLAN_FLIGHTS_FLIGHT_NBR) REFERENCES PLAN_DAYFLIGHTS(WEEKDAYS_DAY_NBR, PLAN_FLIGHTS_FLIGHT_NBR),
   CONSTRAINT FK_EFF_FLIGHTS_CREWS FOREIGN KEY(CREWS_CREW_CODE) REFERENCES CREWS(CREW_CODE),
   CONSTRAINT FK_EFF_FLIGHTS_AIRCRAFTS FOREIGN KEY(AIRCRAFTS_AIRCRAFT_NBR) REFERENCES AIRCRAFTS(AIRCRAFT_NBR)
);
COMMENT ON TABLE EFF_FLIGHTS IS 'Effective flight';
COMMENT ON COLUMN EFF_FLIGHTS.PLAN_DEP_DATE IS 'Local Departure date (UTC) - Departure time is obtained with linked Planned Fligtht';
COMMENT ON COLUMN EFF_FLIGHTS.RES_SEATS_QTY IS 'Reserved Seats Quantity (Number)';
COMMENT ON COLUMN EFF_FLIGHTS.OCC_SEATS_QTY IS 'Occupied Seats Quantity (Number)';
COMMENT ON COLUMN EFF_FLIGHTS.REAL_DEP_TIME IS 'Real Departure Time';
COMMENT ON COLUMN EFF_FLIGHTS.REAL_ARR_TIME IS 'Real Arriving Time';
COMMENT ON COLUMN EFF_FLIGHTS.LOADED_FUEL IS 'Loaded Fuel for the complete flight';

CREATE TABLE TICKETS(
   WEEKDAYS_DAY_NBR SMALLINT,
   PLAN_FLIGHTS_FLIGHT_NBR SMALLINT,
   EFF_FLIGHTS_PLAN_DEP_DATE TIME,
   SEAT CHAR(5) ,
   PRICE MONEY,
   PASSENGERS_PSGR_CODE INTEGER NOT NULL,
   CURRENCIES_CURR_CODE CHAR(4)  NOT NULL,
   CLASSES_CLASS_CODE INTEGER NOT NULL,
   CONSTRAINT PK_TICKETS PRIMARY KEY(WEEKDAYS_DAY_NBR, PLAN_FLIGHTS_FLIGHT_NBR, EFF_FLIGHTS_PLAN_DEP_DATE, SEAT),
   CONSTRAINT FK_TICKETS_EFF_FLIGHTS FOREIGN KEY(WEEKDAYS_DAY_NBR, PLAN_FLIGHTS_FLIGHT_NBR, EFF_FLIGHTS_PLAN_DEP_DATE) REFERENCES EFF_FLIGHTS(WEEKDAYS_DAY_NBR, PLAN_FLIGHTS_FLIGHT_NBR, PLAN_DEP_DATE),
   CONSTRAINT FK_TICKETS_PASSENGERS FOREIGN KEY(PASSENGERS_PSGR_CODE) REFERENCES PASSENGERS(PSGR_CODE),
   CONSTRAINT FK_TICKETS_CURRENCIES FOREIGN KEY(CURRENCIES_CURR_CODE) REFERENCES CURRENCIES(CURR_CODE),
   CONSTRAINT FK_TICKETS_CLASSES FOREIGN KEY(CLASSES_CLASS_CODE) REFERENCES CLASSES(CLASS_CODE)
);
COMMENT ON TABLE TICKETS IS 'Tickets';

CREATE TABLE EFF_STOPOVERS(
   WEEKDAYS_DAY_NBR_1 SMALLINT,
   PLAN_FLIGHTS_FLIGHT_NBR_1 SMALLINT,
   EFF_FLIGHTS_PLAN_DEP_DATE TIME,
   ESO_NBR SMALLINT,
   REAL_TRAVEL_DUR TIME,
   REAL_LANDING_TIME TIMESTAMP,
   REAL_TAKEOFF_TIME TIMESTAMP,
   LOADED_FUEL INTEGER,
   WEEKDAYS_DAY_NBR SMALLINT NOT NULL,
   PLAN_FLIGHTS_FLIGHT_NBR SMALLINT NOT NULL,
   PLAN_STOPOVERS_STOPOVER_NBR SMALLINT NOT NULL,
   CONSTRAINT PK_EFF_STOPOVERS PRIMARY KEY(WEEKDAYS_DAY_NBR_1, PLAN_FLIGHTS_FLIGHT_NBR_1, EFF_FLIGHTS_PLAN_DEP_DATE, ESO_NBR),
   CONSTRAINT FK_EFF_STOPOVERS_EFF_FLIGHTS_1 FOREIGN KEY(WEEKDAYS_DAY_NBR_1, PLAN_FLIGHTS_FLIGHT_NBR_1, EFF_FLIGHTS_PLAN_DEP_DATE) REFERENCES EFF_FLIGHTS(WEEKDAYS_DAY_NBR, PLAN_FLIGHTS_FLIGHT_NBR, PLAN_DEP_DATE),
   CONSTRAINT FK_EFF_STOPOVERS_PLAN_STOPOVERS FOREIGN KEY(WEEKDAYS_DAY_NBR, PLAN_FLIGHTS_FLIGHT_NBR, PLAN_STOPOVERS_STOPOVER_NBR) REFERENCES PLAN_STOPOVERS(WEEKDAYS_DAY_NBR, PLAN_FLIGHTS_FLIGHT_NBR, STOPOVER_NBR)
);
COMMENT ON TABLE EFF_STOPOVERS IS 'Effective stopovers';
COMMENT ON COLUMN EFF_STOPOVERS.REAL_TRAVEL_DUR IS 'Real Travel Duration';
COMMENT ON COLUMN EFF_STOPOVERS.REAL_LANDING_TIME IS 'Real Landing Time';
COMMENT ON COLUMN EFF_STOPOVERS.REAL_TAKEOFF_TIME IS 'Real Take-off Time';
COMMENT ON COLUMN EFF_STOPOVERS.LOADED_FUEL IS 'Loaded Fuel during Stopover in liters';

CREATE TABLE include(
   KoCREW_KoCREW_CODE INTEGER,
   ROLES_ROLE_CODE INTEGER,
   NBR_IN_ROLE SMALLINT,
   CONSTRAINT PK_include PRIMARY KEY(KoCREW_KoCREW_CODE, ROLES_ROLE_CODE),
   CONSTRAINT FK_include_KoCREW FOREIGN KEY(KoCREW_KoCREW_CODE) REFERENCES KoCREW(KoCREW_CODE),
   CONSTRAINT FK_include_ROLES FOREIGN KEY(ROLES_ROLE_CODE) REFERENCES ROLES(ROLE_CODE)
);
COMMENT ON TABLE include IS 'Include';
COMMENT ON COLUMN include.NBR_IN_ROLE IS 'Number of people required in the crew for this role';

CREATE TABLE may_have(
   ROLES_ROLE_CODE INTEGER,
   STAFF_STAFF_CODE INTEGER,
   CONSTRAINT PK_may_have PRIMARY KEY(ROLES_ROLE_CODE, STAFF_STAFF_CODE),
   CONSTRAINT FK_may_have_ROLES FOREIGN KEY(ROLES_ROLE_CODE) REFERENCES ROLES(ROLE_CODE),
   CONSTRAINT FK_may_have_STAFF FOREIGN KEY(STAFF_STAFF_CODE) REFERENCES STAFF(STAFF_CODE)
);
COMMENT ON TABLE may_have IS 'May have';

CREATE TABLE need(
   KoCREW_KoCREW_CODE INTEGER,
   KoAIRCRAFT_IATA CHAR(4) ,
   CONSTRAINT PK_need PRIMARY KEY(KoCREW_KoCREW_CODE, KoAIRCRAFT_IATA),
   CONSTRAINT FK_need_KoCREW FOREIGN KEY(KoCREW_KoCREW_CODE) REFERENCES KoCREW(KoCREW_CODE),
   CONSTRAINT FK_need_KoAIRCRAFT FOREIGN KEY(KoAIRCRAFT_IATA) REFERENCES KoAIRCRAFT(IATA)
);
COMMENT ON TABLE need IS 'Need';

CREATE TABLE isa_KoCrew(
   KoCREW_KoCREW_CODE INTEGER,
   CREWS_CREW_CODE INTEGER,
   CONSTRAINT PK_isa_KoCrew PRIMARY KEY(KoCREW_KoCREW_CODE, CREWS_CREW_CODE),
   CONSTRAINT FK_isa_KoCrew_KoCREW FOREIGN KEY(KoCREW_KoCREW_CODE) REFERENCES KoCREW(KoCREW_CODE),
   CONSTRAINT FK_isa_KoCrew_CREWS FOREIGN KEY(CREWS_CREW_CODE) REFERENCES CREWS(CREW_CODE)
);
COMMENT ON TABLE isa_KoCrew IS 'Is a Kind of Crew';

CREATE TABLE in_flight(
   STAFF_STAFF_CODE INTEGER,
   YEAR_PERIODS_YEAR_PERIOD CHAR(4) ,
   MONTH_PERIODS_MONTH_PERIOD CHAR(2) ,
   HOURS_NBR SMALLINT,
   CONSTRAINT PK_in_flight PRIMARY KEY(STAFF_STAFF_CODE, YEAR_PERIODS_YEAR_PERIOD, MONTH_PERIODS_MONTH_PERIOD),
   CONSTRAINT FK_in_flight_STAFF FOREIGN KEY(STAFF_STAFF_CODE) REFERENCES STAFF(STAFF_CODE),
   CONSTRAINT FK_in_flight_MONTH_PERIODS FOREIGN KEY(YEAR_PERIODS_YEAR_PERIOD, MONTH_PERIODS_MONTH_PERIOD) REFERENCES MONTH_PERIODS(YEAR_PERIOD, MONTH_PERIOD)
);
COMMENT ON TABLE in_flight IS 'In flight';

CREATE TABLE obtain(
   STAFF_STAFF_CODE INTEGER,
   KoLICENSE_KoLIC_CODE INTEGER,
   OBTAINED DATE NOT NULL,
   CONSTRAINT PK_obtain PRIMARY KEY(STAFF_STAFF_CODE, KoLICENSE_KoLIC_CODE),
   CONSTRAINT FK_obtain_STAFF FOREIGN KEY(STAFF_STAFF_CODE) REFERENCES STAFF(STAFF_CODE),
   CONSTRAINT FK_obtain_KoLICENSE FOREIGN KEY(KoLICENSE_KoLIC_CODE) REFERENCES KoLICENSE(KoLIC_CODE)
);
COMMENT ON TABLE obtain IS 'Obtain';

CREATE TABLE allow_pilot(
   KoLICENSE_KoLIC_CODE INTEGER,
   KoAIRCRAFT_IATA CHAR(4) ,
   CONSTRAINT PK_allow_pilot PRIMARY KEY(KoLICENSE_KoLIC_CODE, KoAIRCRAFT_IATA),
   CONSTRAINT FK_allow_pilot_KoLICENSE FOREIGN KEY(KoLICENSE_KoLIC_CODE) REFERENCES KoLICENSE(KoLIC_CODE),
   CONSTRAINT FK_allow_pilot_KoAIRCRAFT FOREIGN KEY(KoAIRCRAFT_IATA) REFERENCES KoAIRCRAFT(IATA)
);
COMMENT ON TABLE allow_pilot IS 'Allow pilot';

CREATE TABLE have_qualif(
   STAFF_STAFF_CODE INTEGER,
   QUALIFICATIONS_QUALIF_CODE INTEGER,
   CONSTRAINT PK_have_qualif PRIMARY KEY(STAFF_STAFF_CODE, QUALIFICATIONS_QUALIF_CODE),
   CONSTRAINT FK_have_qualif_STAFF FOREIGN KEY(STAFF_STAFF_CODE) REFERENCES STAFF(STAFF_CODE),
   CONSTRAINT FK_have_qualif_QUALIFICATIONS FOREIGN KEY(QUALIFICATIONS_QUALIF_CODE) REFERENCES QUALIFICATIONS(QUALIF_CODE)
);
COMMENT ON TABLE have_qualif IS 'Have';

CREATE TABLE require(
   KoLICENSE_KoLIC_CODE INTEGER,
   QUALIFICATIONS_QUALIF_CODE INTEGER,
   CONSTRAINT PK_require PRIMARY KEY(KoLICENSE_KoLIC_CODE, QUALIFICATIONS_QUALIF_CODE),
   CONSTRAINT FK_require_KoLICENSE FOREIGN KEY(KoLICENSE_KoLIC_CODE) REFERENCES KoLICENSE(KoLIC_CODE),
   CONSTRAINT FK_require_QUALIFICATIONS FOREIGN KEY(QUALIFICATIONS_QUALIF_CODE) REFERENCES QUALIFICATIONS(QUALIF_CODE)
);
COMMENT ON TABLE require IS 'Require';

CREATE TABLE bind(
   STAFF_STAFF_CODE INTEGER,
   EVENTS_EVENT_NBR INTEGER,
   DOC_DOC_CODE INTEGER,
   CONSTRAINT PK_bind PRIMARY KEY(STAFF_STAFF_CODE, EVENTS_EVENT_NBR, DOC_DOC_CODE),
   CONSTRAINT FK_bind_EVENTS FOREIGN KEY(STAFF_STAFF_CODE, EVENTS_EVENT_NBR) REFERENCES EVENTS(STAFF_STAFF_CODE, EVENT_NBR),
   CONSTRAINT FK_bind_DOC FOREIGN KEY(DOC_DOC_CODE) REFERENCES DOC(DOC_CODE)
);
COMMENT ON TABLE bind IS 'Bind';

CREATE TABLE name_language(
   LANGUAGES_LNG_CODE_in CHAR(2) ,
   LANGUAGES_LNG_CODE_of CHAR(2) ,
   LNGNAME VARCHAR(50)  NOT NULL,
   CONSTRAINT PK_name_language PRIMARY KEY(LANGUAGES_LNG_CODE_in, LANGUAGES_LNG_CODE_of),
   CONSTRAINT FK_name_language_LANGUAGES__in FOREIGN KEY(LANGUAGES_LNG_CODE_in) REFERENCES LANGUAGES(LNG_CODE),
   CONSTRAINT FK_name_language_LANGUAGES__of FOREIGN KEY(LANGUAGES_LNG_CODE_of) REFERENCES LANGUAGES(LNG_CODE)
);
COMMENT ON TABLE name_language IS 'Name language';

CREATE TABLE name_City(
   CITIES_CITY_CODE CHAR(25) ,
   LANGUAGES_LNG_CODE_in CHAR(2) ,
   CITYNAME VARCHAR(50)  NOT NULL,
   CONSTRAINT PK_name_City PRIMARY KEY(CITIES_CITY_CODE, LANGUAGES_LNG_CODE_in),
   CONSTRAINT FK_name_City_CITIES FOREIGN KEY(CITIES_CITY_CODE) REFERENCES CITIES(CITY_CODE),
   CONSTRAINT FK_name_City_LANGUAGES__in FOREIGN KEY(LANGUAGES_LNG_CODE_in) REFERENCES LANGUAGES(LNG_CODE)
);
COMMENT ON TABLE name_City IS 'Name city';
COMMENT ON COLUMN name_City.CITYNAME IS 'Name of City';

CREATE TABLE serve(
   CITIES_CITY_CODE CHAR(25) ,
   AIRPORTS_AIRPORT_CODE CHAR(4) ,
   CONSTRAINT PK_serve PRIMARY KEY(CITIES_CITY_CODE, AIRPORTS_AIRPORT_CODE),
   CONSTRAINT FK_serve_CITIES FOREIGN KEY(CITIES_CITY_CODE) REFERENCES CITIES(CITY_CODE),
   CONSTRAINT FK_serve_AIRPORTS FOREIGN KEY(AIRPORTS_AIRPORT_CODE) REFERENCES AIRPORTS(AIRPORT_CODE)
);
COMMENT ON TABLE serve IS 'Serve';

CREATE TABLE name_Airport(
   AIRPORTS_AIRPORT_CODE CHAR(4) ,
   LANGUAGES_LNG_CODE_in CHAR(2) ,
   ARP_NAME VARCHAR(50)  NOT NULL,
   CONSTRAINT PK_name_Airport PRIMARY KEY(AIRPORTS_AIRPORT_CODE, LANGUAGES_LNG_CODE_in),
   CONSTRAINT FK_name_Airport_AIRPORTS FOREIGN KEY(AIRPORTS_AIRPORT_CODE) REFERENCES AIRPORTS(AIRPORT_CODE),
   CONSTRAINT FK_name_Airport_LANGUAGES__in FOREIGN KEY(LANGUAGES_LNG_CODE_in) REFERENCES LANGUAGES(LNG_CODE)
);
COMMENT ON TABLE name_Airport IS 'Name airport';
COMMENT ON COLUMN name_Airport.ARP_NAME IS 'Name of Airport';

CREATE TABLE accept(
   AIRPORTS_AIRPORT_CODE CHAR(4) ,
   KoAIRCRAFT_IATA CHAR(4) ,
   CONSTRAINT PK_accept PRIMARY KEY(AIRPORTS_AIRPORT_CODE, KoAIRCRAFT_IATA),
   CONSTRAINT FK_accept_AIRPORTS FOREIGN KEY(AIRPORTS_AIRPORT_CODE) REFERENCES AIRPORTS(AIRPORT_CODE),
   CONSTRAINT FK_accept_KoAIRCRAFT FOREIGN KEY(KoAIRCRAFT_IATA) REFERENCES KoAIRCRAFT(IATA)
);
COMMENT ON TABLE accept IS 'Accept';

CREATE TABLE name_KoAircraft(
   LANGUAGES_LNG_CODE_in CHAR(2) ,
   KoAIRCRAFT_IATA CHAR(4) ,
   KoACRNAME VARCHAR(50)  NOT NULL,
   CONSTRAINT PK_name_KoAircraft PRIMARY KEY(LANGUAGES_LNG_CODE_in, KoAIRCRAFT_IATA),
   CONSTRAINT FK_name_KoAircraft_LANGUAGES__in FOREIGN KEY(LANGUAGES_LNG_CODE_in) REFERENCES LANGUAGES(LNG_CODE),
   CONSTRAINT FK_name_KoAircraft_KoAIRCRAFT FOREIGN KEY(KoAIRCRAFT_IATA) REFERENCES KoAIRCRAFT(IATA)
);
COMMENT ON TABLE name_KoAircraft IS 'Kind of aircraft Name';

CREATE TABLE estimate_price(
   WEEKDAYS_DAY_NBR SMALLINT,
   PLAN_FLIGHTS_FLIGHT_NBR SMALLINT,
   CLASSES_CLASS_CODE INTEGER,
   ESTIMATED_PRICE MONEY,
   CURRENCIES_CURR_CODE CHAR(4)  NOT NULL,
   CONSTRAINT PK_estimate_price PRIMARY KEY(WEEKDAYS_DAY_NBR, PLAN_FLIGHTS_FLIGHT_NBR, CLASSES_CLASS_CODE),
   CONSTRAINT FK_estimate_price_PLAN_DAYFLIGHTS FOREIGN KEY(WEEKDAYS_DAY_NBR, PLAN_FLIGHTS_FLIGHT_NBR) REFERENCES PLAN_DAYFLIGHTS(WEEKDAYS_DAY_NBR, PLAN_FLIGHTS_FLIGHT_NBR),
   CONSTRAINT FK_estimate_price_CLASSES FOREIGN KEY(CLASSES_CLASS_CODE) REFERENCES CLASSES(CLASS_CODE),
   CONSTRAINT FK_estimate_price_CURRENCIES FOREIGN KEY(CURRENCIES_CURR_CODE) REFERENCES CURRENCIES(CURR_CODE)
);
COMMENT ON TABLE estimate_price IS 'Estimate ticket price';

CREATE TABLE estimate_nb_passengers(
   WEEKDAYS_DAY_NBR SMALLINT,
   AIRLINKS_AIRLINK_CODE INTEGER,
   TIMESLOTS_TIMESLOT_CODE INTEGER,
   ESTIMATED_SEATS SMALLINT NOT NULL,
   CONSTRAINT PK_estimate_nb_passengers PRIMARY KEY(WEEKDAYS_DAY_NBR, AIRLINKS_AIRLINK_CODE, TIMESLOTS_TIMESLOT_CODE),
   CONSTRAINT FK_estimate_nb_passengers_WEEKDAYS FOREIGN KEY(WEEKDAYS_DAY_NBR) REFERENCES WEEKDAYS(DAY_NBR),
   CONSTRAINT FK_estimate_nb_passengers_AIRLINKS FOREIGN KEY(AIRLINKS_AIRLINK_CODE) REFERENCES AIRLINKS(AIRLINK_CODE),
   CONSTRAINT FK_estimate_nb_passengers_TIMESLOTS FOREIGN KEY(TIMESLOTS_TIMESLOT_CODE) REFERENCES TIMESLOTS(TIMESLOT_CODE)
);
COMMENT ON TABLE estimate_nb_passengers IS 'Estimate number of passengers';
COMMENT ON COLUMN estimate_nb_passengers.ESTIMATED_SEATS IS 'Estmated seats quantity (Number)';

CREATE TABLE contain(
   CLASSES_CLASS_CODE INTEGER,
   AIRCRAFTS_AIRCRAFT_NBR SMALLINT,
   SEATS INTEGER,
   CONSTRAINT PK_contain PRIMARY KEY(CLASSES_CLASS_CODE, AIRCRAFTS_AIRCRAFT_NBR),
   CONSTRAINT FK_contain_CLASSES FOREIGN KEY(CLASSES_CLASS_CODE) REFERENCES CLASSES(CLASS_CODE),
   CONSTRAINT FK_contain_AIRCRAFTS FOREIGN KEY(AIRCRAFTS_AIRCRAFT_NBR) REFERENCES AIRCRAFTS(AIRCRAFT_NBR)
);
COMMENT ON TABLE contain IS 'Contain';
COMMENT ON COLUMN contain.SEATS IS 'Nombre de palces disponibles dans la classe';

CREATE TABLE name_weekday(
   LANGUAGES_LNG_CODE_in CHAR(2) ,
   WEEKDAYS_DAY_NBR SMALLINT,
   DAYNAME VARCHAR(50)  NOT NULL,
   CONSTRAINT PK_name_weekday PRIMARY KEY(LANGUAGES_LNG_CODE_in, WEEKDAYS_DAY_NBR),
   CONSTRAINT FK_name_weekday_LANGUAGES__in FOREIGN KEY(LANGUAGES_LNG_CODE_in) REFERENCES LANGUAGES(LNG_CODE),
   CONSTRAINT FK_name_weekday_WEEKDAYS FOREIGN KEY(WEEKDAYS_DAY_NBR) REFERENCES WEEKDAYS(DAY_NBR)
);
COMMENT ON TABLE name_weekday IS 'Name day';

CREATE TABLE name_month(
   YEAR_PERIODS_YEAR_PERIOD CHAR(4) ,
   MONTH_PERIODS_MONTH_PERIOD CHAR(2) ,
   LANGUAGES_LNG_CODE_in CHAR(2) ,
   MONTHNAME VARCHAR(50)  NOT NULL,
   CONSTRAINT PK_name_month PRIMARY KEY(YEAR_PERIODS_YEAR_PERIOD, MONTH_PERIODS_MONTH_PERIOD, LANGUAGES_LNG_CODE_in),
   CONSTRAINT FK_name_month_MONTH_PERIODS FOREIGN KEY(YEAR_PERIODS_YEAR_PERIOD, MONTH_PERIODS_MONTH_PERIOD) REFERENCES MONTH_PERIODS(YEAR_PERIOD, MONTH_PERIOD),
   CONSTRAINT FK_name_month_LANGUAGES__in FOREIGN KEY(LANGUAGES_LNG_CODE_in) REFERENCES LANGUAGES(LNG_CODE)
);
COMMENT ON TABLE name_month IS 'Name month';

CREATE TABLE name_role(
   ROLES_ROLE_CODE INTEGER,
   LANGUAGES_LNG_CODE_in CHAR(2) ,
   ROLE_NAME VARCHAR(50)  NOT NULL,
   ROLE_DSCR TEXT NOT NULL,
   CONSTRAINT PK_name_role PRIMARY KEY(ROLES_ROLE_CODE, LANGUAGES_LNG_CODE_in),
   CONSTRAINT FK_name_role_ROLES FOREIGN KEY(ROLES_ROLE_CODE) REFERENCES ROLES(ROLE_CODE),
   CONSTRAINT FK_name_role_LANGUAGES__in FOREIGN KEY(LANGUAGES_LNG_CODE_in) REFERENCES LANGUAGES(LNG_CODE)
);
COMMENT ON COLUMN name_role.ROLE_NAME IS 'Name of role';
